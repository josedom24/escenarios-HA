- name: install drbd
  apt: 
    pkg:
    - drbd-utils

- name: Copy config drbd
  copy: src=files/etc/drbd.d/wwwdata.res dest=/etc/drbd.d/wwwdata.res owner=root group=root mode=0644
  
- name: Checking DRBD Mirror Devices Creation Status
  stat:
    path: "/etc/drbd.d/.drbd1.created"
  register: _drbd_mirror_device_creation_status

- name: Creating DRBD Mirror Devices
  command: drbdadm create-md wwwdata
  register: _drbd_mirror_device_created
  when: not _drbd_mirror_device_creation_status['stat']['exists']

- name: Marking DRDB Mirror Devices Created
  file:
    path: "/etc/drbd.d/.drbd1.created"
    state: touch
  when: _drbd_mirror_device_created['changed']

- name: Bringing DRBD Mirror Devices Up
  command: drbdadm up wwwdata
  register: _drbd_mirror_device_up
  when: _drbd_mirror_device_created['changed']

- name: Defining DRBD Primary
  command: drbdadm primary --force wwwdata
  register: _drbd_primary
  when: _drbd_mirror_device_up['changed'] and 
        ansible_hostname == 'nodo1'

- name: Waiting For DRBD Sync To Complete
  command: drbdadm status
  register: _drbd_sync
  until: ('Inconsistent' not in _drbd_sync['stdout'])
  retries: 100
  delay: 30


- name: Create a ext4 filesystem on /dev/drbd1
  community.general.filesystem:
    fstype: ext4
    dev: /dev/drbd1
  when: ansible_hostname == 'nodo1'

- name: Mount /dev/drbd1
  ansible.posix.mount:
    path: /mnt
    src: /dev/drbd1
    fstype: ext4
    state: mounted
  when: ansible_hostname == 'nodo1'

- name: Copy index.html
  copy: src=files/index.html dest=/mnt/index.html owner=www-data group=www-data mode=0644
  when: ansible_hostname == 'nodo1'

- name: Unmount /dev/drbd1
  ansible.posix.mount:
    path: /mnt
    state: unmounted
  when: ansible_hostname == 'nodo1'

#- name: Copy script update_cluster.sh
#  copy: >
#    src=update_cluster.sh
#    dest=/root/update_cluster.sh
#    mode=644
#    owner=root
#    group=root
#- name: Update the cluster
#  command: sh /root/update_cluster.sh
#  when: ansible_hostname == 'nodo1'